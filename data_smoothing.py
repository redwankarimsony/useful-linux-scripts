# -*- coding: utf-8 -*-
"""Data Smoothing Tutorial

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hAfRIfgr17wN4HNaFc7CsmMIyvPAV9do
"""

import pandas as pd
import matplotlib.pyplot as plt


def running_average(data, window_size):
    """
    This method takes a series of number and averages each five number and set the output value.
    Then it moves by one position to the right and repeat the same process again. Hence each
    number in the smooth series is the average of five numbers of the original series
    """
    if window_size % 2 == 0:
        raise ValueError("Window size should be odd for symmetric averaging")

    half_window = window_size // 2
    smoothed_data = []

    for i in range(len(data)):
        # Determine the start and end indices for the window
        start_idx = max(0, i - half_window)
        end_idx = min(len(data), i + half_window + 1)

        # Compute the average of data points in the window
        window_average = sum(data[start_idx:end_idx]) / len(data[start_idx:end_idx])
        smoothed_data.append(window_average)

    return smoothed_data




if __name__ == "__main__":
    # Loading the data. As the data as % sign in the second row,
    # hence we are reading from second row to the end
    df = pd.read_excel("/content/Data for curve smooth_ED128.xlsx")[1:]

    print(df.head())
    print("Loaded data of shape ", df.shape)


    window_size = 9

    strain_smoothed  = running_average(df['Strain'], window_size=window_size)
    stress_smoothed = running_average(df['Stress'], window_size=window_size)




    plt.figure(figsize=(10,6), dpi=100)
    plt.plot(df["Strain"], df["Stress"], label="Original", linewidth=2, color="r")
    plt.plot(strain_smoothed, stress_smoothed, label="Smoothed", linewidth=2, color="g")
    plt.xlabel("Strain")
    plt.ylabel("Stress")
    plt.legend()
    plt.grid()
    plt.title("Stress vs Strain curve")

